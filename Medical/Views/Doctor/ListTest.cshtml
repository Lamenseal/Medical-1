@model IEnumerable<Medical.Models.Doctor>
@{
    ViewData["Title"] = "ListTest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <style>
        .listFCN {
            color: #366ba8;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .listFCS {
            font-size: 18px;
            height: 18px;
            line-height: 18px;
            margin-bottom: 6px;
            overflow: hidden;
        }

        .listFCC {
            color: #666666;
            font-size: 18px;
            height: 54px;
            line-height: 18px;
            overflow: hidden;
        }

        .container img {
            width: 100%;
        }

        .body {
            font-size: 18px;
            font-family: "微軟正黑體";
            font-weight: bold;
        }

        .listFCP {
            font-size: 0px;
            line-height: 0px;
            margin-bottom: 10px;
        }

        .input-selector {
            outline: none;
            border: none;
            
        }

        .muti-selector {
            width: max-content;
            float: left;
        }

        .select-field {
            border: 1px solid black;
        }

        .select-field, .task, .list {
            width: 100%;
            background-color: white;
        }

        .list {
            box-shadow: 0px 30px 60px rgb(0,0,0,0.2);
            display: none;
        }

        .down-arrow {
            font-size: 1.2rem;
            cursor: pointer;
            display: inline-block;
            transition: 0.2s linear;
        }

        .task {
            display: block;
            padding-left: 0;
        }

            .task span {
                float: right;
                font-size: 0.6rem;
                padding-top: 6px;
            }

                .task span:hover {
                    background-color: aliceblue;
                }

        .show {
            display: block;
        }

        .rotate180 {
            transform: rotate(180deg);
        }
    </style>

}
<!-- Hero Start -->
<div class="container-fluid bg-primary py-5 hero-header mb-5">
    <div class="row py-3">
        <div class="col-12 text-center">
            <h3 class="display-3 text-white animated zoomIn">醫生清單</h3>
        </div>
    </div>
</div>
<!-- Hero End -->
<br>

@using (Html.BeginForm())
{
    <div class="muti-selector">
        <div class="select-field">
            <input type="text" name="" placeholder="Choose tasks" class="input-selector" />
            <span class="down-arrow">&blacktriangledown;</span>

        </div>
        <div class="list">
            <label for="" class="task">
                <input type="checkbox" class="check" onclick="CCC()" name="123" id="c"/>
                全選
            </label>
        </div>
    </div>
    <div class="muti-selector">
        <div class="select-field">
            <input type="text" name="" placeholder="Choose tasks" class="input-selector" />
            <span class="down-arrow">&blacktriangledown;</span>

        </div>
        <div class="list">
            <label for="" class="task">
                <input type="checkbox" />
                全選
            </label>
        </div>
    </div>
    @:關鍵字 @Html.TextBox("txtKeyword")
    <input type="submit" value="查詢" />
}
@{ int count = 0;
    foreach (var item in Model)
    {
        count++;
        <div class="col-lg-4 wow slideInUp" data-wow-delay="0.3s" style="float:left;width:20%;">
            <div class="team-item" style="padding: 0 9px 25px 9px;">
                <div class="team-text position-relative bg-light text-center rounded-bottom p-4 pt-5">

                    @*<p class="text-primary mb-0">醫生</p>*@
                </div>
                <div class="position-relative rounded-top  container listFCP" style="z-index: 1;">
                    <img id="img" class="img-fluid rounded-top w-100" src="~/images/@Html.DisplayFor(modelItem => item.PicturePath)" style="width:204px;height:204px;">

                    @*<div class="position-absolute top-100 start-50 translate-middle bg-light rounded p-2 d-flex">
                            <a class="btn btn-primary btn-square m-1" href="#"><i class="fab fa-twitter fw-normal"></i></a>
                            <a class="btn btn-primary btn-square m-1" href="#"><i class="fab fa-facebook-f fw-normal"></i></a>
                            <a class="btn btn-primary btn-square m-1" href="#"><i class="fab fa-linkedin-in fw-normal"></i></a>
                            <a class="btn btn-primary btn-square m-1" href="#"><i class="fab fa-instagram fw-normal"></i></a>
                        </div>*@
                </div>
                <div class="container">
                    <div class="listFCN">@Html.DisplayFor(modelItem => item.DoctorName)</div>
                    <div class="listFCS">@Html.DisplayFor(modelItem => item.JobTitle)</div>
                    <div class="listFCC"> @Html.DisplayFor(modelItem => item.Education)</div>
                    @*<button type="button" class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        詳細資料
                    </button>*@
                    @Html.ActionLink("詳細資料", "Detail", new { id = item.DoctorId }, new { @class = "btn btn-outline-success" })
                </div>
            </div>
        </div>
        <!--<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="@Html.DisplayFor(modelItem=>item.DoctorId)">
                        ...
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>-->
                        @*<button type="button" class="btn btn-primary">Save changes</button>*@
                    <!--</div>
                </div>
            </div>
        </div>-->

    }
    <footer style="clear:both"></footer>
}
@section Scripts{
    <script>

        @*選單下拉*@
        document.querySelector('.select-field').addEventListener('click', () => {
        document.querySelector('.list').classList.toggle('show');
        document.querySelector('.down-arrow').classList.toggle('rotate180')
    })
        loadDep();
        //document.querySelector('.check').addEventListener('checked', () => {
        //    loadDoc()
        //})
        function CCC() {
            console.log($(event.target)[0].name)
            
        }
       
        @*讀取專長選單*@
        async function loadDep() {

            const deps = await fetch('@Url.Content("~/Admin/AdminDoctor/Dep")').then(response => response.json())
            deps.forEach((DeptName) => {
                console.log(DeptName)
                name =`<label for="" class="task">
                <input type="checkbox" class="check" onclick="CCC()" id="${DeptName}" name="${DeptName}" value="${DeptName}"/>
                ${DeptName}
            </label>`;
                document.querySelector('.list').innerHTML += name;
            })

        }
        @*讀取TreatmentDetail*@
        async function loadTrTD() {
                docID = this.name;
                const trtDs = await fetch('@Url.Content("~/doctor/getTreatment")' + `?dcID=${docID}`).then(response => response.json());
                trtDs.forEach((TreatmentDetail) => {
                    name = TreatmentDetail
                    document.querySelector(`#${docID}`).textContent= name;
                })

        }
    </script>
}

